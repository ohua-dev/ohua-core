name: ohua-core
version: '0.7.2'
synopsis: Fundamental, platform independent functionality of the ohua compiler.
description: |
  Components for compiling a portable dataflow graph from an expression based language.
  Performs tasks such as rewriting, lowering and optimisations.
  Resuling graphs can be executed by any runtime, regardles of platform or laguage
  that implements the ohua core operators and execution semantics.
category: Concurrency
author:
- Sebastian Ertel
- Justus Adam
maintainer: dev@justus.science
license: OtherLicense
license-file: LICENSE.txt
homepage: https://bitbucket.org/sertel/ohua
github: ohua-dev/ohua-core
extra-source-files:
- README.md
dependencies:
- base >=4.8 && <5
- text
- mtl
- aeson >= 1.0.0.0
- microlens
- microlens-platform
- microlens-mtl
- containers
- bytestring
- deepseq
- data-default-class
default-extensions:
- OverloadedStrings
- OverloadedLists
- MultiParamTypeClasses
- FunctionalDependencies
- TypeFamilies
- GADTs
- FlexibleContexts
- FlexibleInstances
- TypeSynonymInstances
- LambdaCase
- TupleSections
- BangPatterns
- ExplicitForAll
- ScopedTypeVariables
- DefaultSignatures
- DeriveFunctor
- DeriveFoldable
- DeriveTraversable
- DeriveGeneric
- PatternSynonyms
- NamedFieldPuns
- RecordWildCards
- ConstraintKinds
when:
  - condition: impl(ghc >= 8.2.0)   
    ghc-options:
      - -Wall
      - -Wcompat
      - -Wincomplete-record-updates
      - -Wincomplete-uni-patterns
      - -Wredundant-constraints
      # This is added because there's a bug in GHC 8.2.2 that means the COMPLETE pragma does not work :'-(
      # that in turn means that it will complain constantly about nonexhaustive patterns when using the
      # many pattern synonyms I have created
      # The GHC people promised me that in 8.4.* it will be fixed, thus when we change this condition to 8.4
      # we can remove that line
      - -fno-warn-incomplete-patterns
library:
  source-dirs: src
  exposed-modules:
  - Ohua.Compile
  - Ohua.Types
  - Ohua.LensClasses
  - Ohua.Monad
  - Ohua.ParseTools.Refs
  - Ohua.ALang.Lang
  - Ohua.ALang.Refs
  - Ohua.ALang.NS
  - Ohua.ALang.Show
  - Ohua.ALang.Passes
  - Ohua.ALang.Passes.SSA
  - Ohua.ALang.Passes.TailRec
  - Ohua.ALang.Optimizations
  - Ohua.ALang.Util
  - Ohua.DFLang.Lang
  - Ohua.DFLang.Refs
  - Ohua.DFLang.Util
  - Ohua.DFLang.HOF
  - Ohua.DFLang.HOF.Smap
  - Ohua.DFLang.HOF.If
  - Ohua.DFLang.HOF.Seq
  - Ohua.DFLang.Passes
  - Ohua.DFLang.TailRec
  - Ohua.DFLang.Optimizations
  - Ohua.DFGraph
  - Ohua.DFGraph.Show
  - Ohua.Serialize.JSON
  - Ohua.Util
  - Ohua.Util.Str
  - Ohua.Unit
  - Ohua.Test.DFGraph
  dependencies:
  - transformers
  - unordered-containers
  - hashable
  - monad-loops
  - vector
  - bifunctors
  - recursion-schemes
  - boxes
  - transformers-base
  - monad-control
  - comonad
  - uniplate
  - fgl
  when:
  - condition: flag(debug)
    cpp-options: -DDEBUG=1
executables:
  ohua-test-exec:
    main: Main.hs
    dependencies:
    - ohua-core
  test-graph-gen:
    main: GenJSONGraph.hs
    other-modules:
      - Ohua.Types.Arbitrary
    source-dirs:
    - test
    - ./.
    dependencies:
    - ohua-core
    - QuickCheck
tests:
  ohua-tests:
    main: Spec.hs
    source-dirs: test
    dependencies:
    - ohua-core
    - hspec
    - QuickCheck
    - ghc
    - fgl
flags:
  debug:
    description: null
    manual: false
    default: false
